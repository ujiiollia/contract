
//protoc -I proto proto/sso/sso.proto --go_out=./gen/go/ --go_opt=paths=source_relative --go-grpc_out=./gen/go/ --go-grpc_opt=paths=source_relative

syntax = "proto3";

package Auth;
// import "google/protobuf/empty.proto";

option go_package = "evs.sso.v1;ssov1";


service Auth{
	rpc Register (RegisterRequest) returns (RegisterResponse);
	rpc Login (LoginRequest) returns (LoginResponse);
	rpc IsAdimin (IsAdiminRequest) returns (IsAdiminResponse);
}

message RegisterRequest{
	string email = 1;
	string password = 2;
}

message RegisterResponse{
	int64 user_id = 1;
}
message LoginRequest{
	string email = 1;
	string password = 2;
	int64 app_id = 3; // app to login to
}
message LoginResponse{
	// ! user can see text in token!
	string token = 1; // Auth TOKEN of the logged in user
}
message IsAdiminRequest{
	int64 user_id = 1;

}

message IsAdiminResponse{
	bool is_admin = 1;
}

message Banner {
	string id = 1;
	string name = 2;
	repeated string tags = 3;
	bool active = 4;
	int32 revision = 5;
	bytes image = 6;
	// Другие поля баннера по необходимости
}

message Tag {
	string id = 1;
	string name = 2;
	// Другие поля тега по необходимости
}

message Feature {
	string id = 1;
	string name = 2;
	bool enabled = 3;
	// Другие поля фичи по необходимости
}

message GetBannerRequest {
	string token = 1;
	string banner_id = 2;
	bool use_last_revision = 3;
}

message GetBannerResponse {
	Banner banner = 1;
}

message DisableBannerRequest {
	string token = 1;
	string banner_id = 2;
	bool temporarily_disabled = 3;
}

message DeleteBannerRequest {
	string banner_id = 1;
	string token = 2;
}
message DeleteTagRequest {
	string tag_id = 1;
	string token = 2;
}
message GetTagsResponse {
	repeated Tag tags = 1;
}
message GetFeaturesResponse {
	repeated Feature features = 1;
}
service BannerService {
	rpc GetBanner (GetBannerRequest) returns (GetBannerResponse);
	rpc AddBanner (Banner) returns (Banner);
	rpc UpdateBanner (Banner) returns (Banner);
	rpc DeleteBanner (DeleteBannerRequest) returns (Banner);
	// rpc GetTags (google.protobuf.Empty) returns (GetTagsResponse);
	rpc AddTag (Tag) returns (Tag);
	rpc UpdateTag (Tag) returns (Tag);
	rpc DeleteTag (DeleteTagRequest) returns (Tag);
	// rpc GetFeatures (google.protobuf.Empty) returns (GetFeaturesResponse);
}
